#!/bin/bash
#
# Anti Evil Maid for dracut by Invisible Things Lab
# Copyright (C) 2010 Joanna Rutkowska <joanna@invisiblethingslab.com>
#
# Mount our device, read the sealed secret blobs, initialize TPM
# and finally try to unseal the secrets and display them to the user
#

DEV_PREFIX=/dev/disk/by-label/antievilmaid
MNT=/antievilmaid
TPM_DIR=/var/lib/tpm
TPMS_DIR=${TPM_DIR}s
UNSEALED_SECRET=/tmp/unsealed-secret
LUKS_HEADER_DUMP=/tmp/luks-header-dump
LUKS_PCR=13
PLYMOUTH_THEME_UNSEALED_SECRET=/usr/share/plymouth/themes/qubes-dark/antievilmaid_secret.png


. /lib/dracut-lib.sh
export PATH="/sbin:/usr/sbin:/bin:/usr/bin:$PATH"
shopt -s expand_aliases nullglob


# work with or without plymouth

PLYMOUTH_MESSAGES=()
if plymouth --ping 2>/dev/null; then
    alias plymouth_active=true
    function message() {
        plymouth message --text="$*"
        PLYMOUTH_MESSAGES+=("$*")
    }
else
    alias plymouth=:
    alias plymouth_active=false
    alias message=echo
fi


# mount the AEM device

if [ -d "$MNT" ] ; then
    info "$MNT already exists, skipping..."
    exit 0
fi

glob="$DEV_PREFIX*"
DEV=($glob)  # nullglob is set
if [ ${#DEV[@]} = 0 ]; then
    info "Waiting for any Anti Evil Maid device to become available..."
    while :; do
        DEV=($glob)
        ${DEV+break}
        sleep 0.1
    done
fi
LABEL=${DEV##*/}

info "Mounting the $LABEL device..."
mkdir "$MNT"
mount "$DEV" "$MNT" || exit 1

if antievilmaid_removable "$DEV" "$MNT"; then
    alias removable=true
else
    alias removable=false
fi


# setup TPM

info "Initializing TPM..."
modprobe tpm_tis
ip link set dev lo up
mkdir -p "${TPMS_DIR%/*}"
cp -r "$MNT/antievilmaid/${TPMS_DIR##*/}" "${TPMS_DIR}"
tcsd_changer_identify
tcsd


# Extend PCR with LUKS header(s)

getargs rd.luks.uuid -d rd_LUKS_UUID |
grep -Eo '[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}' |
sort -u |
while read luksid; do
    timeout=100
    while ! [ -b "/dev/disk/by-uuid/$luksid" ]; do
        sleep 0.1
        timeout=$[ $timeout - 1 ]
        if [ $timeout -le 0 ]; then
            message "Timeout while waiting for device $luksid"
            exit 1
        fi
    done

    cryptsetup luksHeaderBackup "/dev/disk/by-uuid/$luksid" \
               --header-backup-file "$LUKS_HEADER_DUMP" || exit 1
    luks_header_hash=$(sha1sum "$LUKS_HEADER_DUMP" | cut -f 1 -d ' ')
    rm -f "$LUKS_HEADER_DUMP"
    info "Extending PCR $LUKS_PCR, value $luks_header_hash, device $luksid..."
    tpm_pcr_extend "$LUKS_PCR" "$luks_header_hash" || exit 1
done


# unseal the secret and unmount the AEM device

sealed_secret_txt=$TPM_DIR/$LABEL/secret.txt.sealed
sealed_secret_png=$TPM_DIR/$LABEL/secret.png.sealed

if plymouth_active && [ -e "$sealed_secret_png" ]; then
    alias png=true
    SEALED_SECRET=$sealed_secret_png
else
    alias png=false
    SEALED_SECRET=$sealed_secret_txt
fi

if [ -f "$SEALED_SECRET" ] ; then
    Z=$(tpm_z_srk)

    message "Attempting to unseal the secret from the TPM..."

    UNSEAL_CMD="tpm_unsealdata $Z -i $SEALED_SECRET -o $UNSEALED_SECRET"
    # we try only once as some TCG 1.2 TPMs start "protecting themselves against
    # dictionary attacks" when there's more than 1 try within a short time... -_-
    # (TCG 2 fixes that):
    if plymouth_active && [ -z "$Z" ]; then
        plymouth ask-for-password --command="$UNSEAL_CMD" \
                                  --prompt="TPM SRK unseal password" \
                                  --number-of-tries=1
    else
        $UNSEAL_CMD  # has its own prompt when needed ("Enter SRK password:")
    fi
else
    message "No data to unseal. Don't forget to generate a ${SEALED_SECRET##*/}"
fi

info "Unmounting the $LABEL device..."
umount "$MNT"


# display the secret in the next (.png) or the current dialog (.txt)

if png; then
    # Verify if the unsealed PNG secret seems valid and replace the lock icon
    if file "$UNSEALED_SECRET" 2>/dev/null | grep -q PNG; then
        cp "$UNSEALED_SECRET" "$PLYMOUTH_THEME_UNSEALED_SECRET"
    fi

    WHERE="next to the prompt for it"
else
    message ""
    message "$(cat "$UNSEALED_SECRET" 2>/dev/null)"
    message ""

    WHERE="above"
fi
message "Never type in your disk password unless the secret $WHERE is correct!"


# pause

plymouth pause-progress
if removable; then
    message "Remove your Anti Evil Maid stick to continue..."
    while [ -b "$DEV" ]; do
        sleep 0.1
    done
else
    if ! png; then
        message "Press <ENTER> to continue..."
        if plymouth_active; then
            plymouth watch-keystroke --keys=$'\n'
        else
            read ignored
        fi
    fi
fi
plymouth unpause-progress


# hide the secret

if removable || ! png; then
    if plymouth_active; then
        for m in "${PLYMOUTH_MESSAGES[@]}"; do
            plymouth hide-message --text="$m"
        done
    else
        clear
    fi
fi

rm -f "$UNSEALED_SECRET"
